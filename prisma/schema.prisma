generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Mesa {
  id      Int        @id @default(autoincrement())
  numero  Int        @unique
  status  StatusMesa @default(disponivel)
  pedidos Pedido[]

  @@map("mesas")
}

model Externo {
  id      Int        @id @default(autoincrement())
  nome_cliente  String
  status  StatusExterno @default(pendente)
  pedidos Pedido[]
}

model Garcom {
  id      Int      @id @default(autoincrement())
  nome    String
  email   String   @unique
  senha   String
  pedidos Pedido[]

  @@map("garcons")
}

model Pedido {
  id          Int            @id @default(autoincrement())
  numero_mesa Int?
  id_externo  Int?
  id_garcom   Int
  hora_pedido DateTime       @default(now())
  status      StatusPedido   @default(pendente)
  metodo_pagamento StatusMetodoPagamento @default(pix)
  mesa        Mesa?           @relation(fields: [numero_mesa], references: [numero])
  externo     Externo?        @relation(fields: [id_externo], references: [id])
  garcom      Garcom         @relation(fields: [id_garcom], references: [id])
  itens       ItemDoPedido[]

  @@map("pedidos")
}

model ItemDoPedido {
  id              Int                         @id @default(autoincrement())
  id_pedido       Int
  id_produto      Int
  quantidade      Int                         @default(1)
  observacoes     String?
  pedido          Pedido                      @relation(fields: [id_pedido], references: [id], onDelete: Cascade, onUpdate: Cascade)
  produto         Produto                     @relation(fields: [id_produto], references: [id], onDelete: Cascade, onUpdate: Cascade)
  itensAdicionais ItemDoPedidoItemAdicional[]

  @@map("itens_do_pedidos")
}

model Produto {
  id               Int                @id @default(autoincrement())
  nome             String
  descricao        String?
  preco            Float
  itens            ItemDoPedido[]
  produtoCategoria ProdutoCategoria[]

  @@map("protudos")
}

model Categoria {
  id               Int                @id @default(autoincrement())
  nome             String             @unique
  produtoCategoria ProdutoCategoria[]

  @@map("categorias")
}

model ProdutoCategoria {
  id_produto   Int
  id_categoria Int
  produto      Produto   @relation(fields: [id_produto], references: [id])
  categoria    Categoria @relation(fields: [id_categoria], references: [id])

  @@id([id_produto, id_categoria])
}

model ItemAdicional {
  id              Int                         @id @default(autoincrement())
  nome            String
  descricao       String?
  preco           Float
  itensAdicionais ItemDoPedidoItemAdicional[]

  @@map("itens_adicionais")
}

model ItemDoPedidoItemAdicional {
  id_item_do_pedido Int
  id_item_adicional Int
  itemDoPedido      ItemDoPedido  @relation(fields: [id_item_do_pedido], references: [id], onDelete: Cascade, onUpdate: Cascade)
  itemAdicional     ItemAdicional @relation(fields: [id_item_adicional], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([id_item_do_pedido, id_item_adicional])
  @@map("item_do_pedido_has_item_adicional")
}

enum StatusMesa {
  disponivel
  ocupada
}

enum StatusExterno {
  pendente
  finalizado
}

enum StatusPedido {
  pendente
  finalizado
}

enum StatusMetodoPagamento {
  pix
  debito
  credito
  dinheiro
}
